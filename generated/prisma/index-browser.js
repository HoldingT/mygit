
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.HistoryScalarFieldEnum = {
  history_id: 'history_id',
  user_id: 'user_id',
  classId: 'classId',
  start_time: 'start_time',
  end_time: 'end_time',
  participant_count: 'participant_count',
  hashtags: 'hashtags',
  created_at: 'created_at'
};

exports.Prisma.LectureScalarFieldEnum = {
  course_id: 'course_id',
  course_name: 'course_name',
  professor: 'professor'
};

exports.Prisma.Lecture_roomScalarFieldEnum = {
  classId: 'classId',
  building: 'building',
  room: 'room',
  floor: 'floor',
  capacity: 'capacity',
  current_occupancy: 'current_occupancy',
  cnt_alone_study: 'cnt_alone_study',
  cnt_group_meeting: 'cnt_group_meeting',
  cnt_quiet: 'cnt_quiet',
  cnt_free_talk: 'cnt_free_talk',
  cnt_short_stay: 'cnt_short_stay',
  cnt_comfortable: 'cnt_comfortable'
};

exports.Prisma.Lecture_scheduleScalarFieldEnum = {
  course_id: 'course_id',
  classId: 'classId',
  weekday: 'weekday',
  start_time: 'start_time',
  end_time: 'end_time'
};

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  password: 'password',
  user_type: 'user_type',
  created_at: 'created_at'
};

exports.Prisma.User_favoriteScalarFieldEnum = {
  user_id: 'user_id',
  classId: 'classId',
  weekday: 'weekday',
  start_time: 'start_time',
  end_time: 'end_time',
  favorited_at: 'favorited_at'
};

exports.Prisma.User_usageScalarFieldEnum = {
  usage_id: 'usage_id',
  user_id: 'user_id',
  classId: 'classId',
  usage_date: 'usage_date',
  start_time: 'start_time',
  end_time: 'end_time',
  participant_count: 'participant_count',
  hashtags: 'hashtags',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.historyOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  classId: 'classId',
  hashtags: 'hashtags'
};

exports.Prisma.lectureOrderByRelevanceFieldEnum = {
  course_id: 'course_id',
  course_name: 'course_name',
  professor: 'professor'
};

exports.Prisma.lecture_roomOrderByRelevanceFieldEnum = {
  classId: 'classId',
  building: 'building',
  room: 'room'
};

exports.Prisma.lecture_scheduleOrderByRelevanceFieldEnum = {
  course_id: 'course_id',
  classId: 'classId'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  password: 'password'
};

exports.Prisma.user_favoriteOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  classId: 'classId'
};

exports.Prisma.user_usageOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  classId: 'classId',
  hashtags: 'hashtags'
};
exports.lecture_schedule_weekday = exports.$Enums.lecture_schedule_weekday = {
  월: '월',
  화: '화',
  수: '수',
  목: '목',
  금: '금',
  토: '토',
  일: '일'
};

exports.user_user_type = exports.$Enums.user_user_type = {
  undergraduate: 'undergraduate',
  postgraduate: 'postgraduate',
  staff: 'staff'
};

exports.user_favorite_weekday = exports.$Enums.user_favorite_weekday = {
  월: '월',
  화: '화',
  수: '수',
  목: '목',
  금: '금',
  토: '토',
  일: '일'
};

exports.Prisma.ModelName = {
  history: 'history',
  lecture: 'lecture',
  lecture_room: 'lecture_room',
  lecture_schedule: 'lecture_schedule',
  user: 'user',
  user_favorite: 'user_favorite',
  user_usage: 'user_usage'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
